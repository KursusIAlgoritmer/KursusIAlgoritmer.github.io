modify binary search so that it always return the element with 
smallest index that matches the search element
(and still guarantees logaitmic running time)

using System;

class Program
{
    static void Main() {
    
        int[] list = {1, 20, 20,32,41, 41,52,63,66,67,68,90,90,90,90,90,90,90,90,100};
        int question = 90;
        
        Console.WriteLine("Hvor er " + question);
        
        for(int i= 0 ; i < list.Length ; i++) Console.Write(i + "\t");
        Console.WriteLine("");
        foreach(int i in list) Console.Write(i + "\t");
        Console.WriteLine("");

        Console.WriteLine(indexOf(list,question));    

    }
    
    static int indexOf(int[] list, int key){
        
        int lo  = 0;
        int hi  = list.Length - 1;
        
        
        
        int mid = 0;
        do{
            while(lo <= hi){
                
                mid = lo + (hi - lo)/2;
    
                Console.WriteLine(lo + " " + mid + " " + hi + " list[mid] = " + list[mid]);
                
                if(key < list[mid])         hi = mid -1;
                else if(key > list[mid])    lo = mid +1;
                else break;
            }

            hi = mid;        
        
            if(lo == hi) return mid;
                
        }while(list[mid] == key);
        
        return -1;
    }
    
}
